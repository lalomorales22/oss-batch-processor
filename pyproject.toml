[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "oss-batch-processor"
version = "1.0.0"
description = "An overnight AI assistant that processes tasks using local LLMs"
readme = "README.md"
authors = [
    {name = "Lalo Morales", email = "lalomorales22@gmail.com"}
]
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = ["ollama", "llm", "batch-processing", "ai", "automation"]

dependencies = [
    "requests>=2.31.0",
    "PyYAML>=6.0.1",
    "Flask>=3.0.0",
    "Flask-Cors>=4.0.0",
]

[project.optional-dependencies]
recommended = [
    "python-dotenv>=1.0.0",
    "colorlog>=6.8.0",
    "schedule>=1.2.0",
    "watchdog>=3.0.0",
]

search = [
    "google-search-results>=2.4.2",
    "tavily-python>=0.3.0",
]

dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "pylint>=3.0.0",
    "mypy>=1.0.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pre-commit>=3.5.0",
]

all = [
    "oss-batch-processor[recommended,search,dev]",
]

[project.urls]
Homepage = "https://github.com/lalomorales22/oss-batch-processor"
Documentation = "https://github.com/lalomorales22/oss-batch-processor#readme"
Repository = "https://github.com/lalomorales22/oss-batch-processor.git"
Issues = "https://github.com/lalomorales22/oss-batch-processor/issues"

[project.scripts]
oss-gui = "oss_GUI:main"
oss-cli = "oss_CLI:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["*.py"]

[tool.black]
line-length = 120
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 120

[tool.pylint.messages_control]
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "W0622",  # redefined-builtin
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "--verbose",
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py",
    "install.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
]